{"ast":null,"code":"import axios from 'axios';\nexport function fetchUsers() {\n  const options = {\n    method: 'GET',\n    url: \"https://stoplight.io/mocks/kode-frontend-team/koder-stoplight/86566464/users?__example=all\",\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  return axios.request(options).then(response => {\n    return response.data;\n  }).catch(error => {\n    return error(error);\n  });\n}\nconst options = {\n  method: \"GET\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n};\nfetch(\"https://stoplight.io/mocks/kode-frontend-team/koder-stoplight/86566464/users?__example=frontend\", options).then(response => response.json()).then(response => console.log(response)).catch(err => console.error(err));\nexport function getDayBirthday(date) {\n  const birthday = new Date(date);\n  const day = birthday.getDate();\n  const month = new Date(date).toLocaleString('ru', {\n    month: 'long'\n  }).slice(0, 3);\n  return `${day} ${month}`;\n}\nexport function sortedUserDepartment(users, value) {\n  console.log(users);\n  console.log(value);\n  return users.filter(user => user.department === value);\n}\nexport function sotredUserName(users) {\n  return users.sort((a, b) => a.firstName > b.firstName ? 1 : -1);\n}\nconst date = new Date();\nconst monthNow = date.getMonth() + 1;\nconst dayNow = date.getDate();\nexport function sotredUserDay(users) {\n  const a = users.filter(i => {\n    return new Date(i.birthday).getMonth() + 1 > monthNow || new Date(i.birthday).getMonth() + 1 === monthNow && new Date(i.birthday).getDate() >= dayNow;\n  }).sort((a, b) => {\n    if (new Date(a.birthday).getMonth() === new Date(b.birthday).getMonth()) {\n      return new Date(a.birthday).getDate() > new Date(b.birthday).getDate() ? 1 : -1;\n    } else {\n      return new Date(a.birthday).getMonth() > new Date(b.birthday).getMonth() ? 1 : -1;\n    }\n  });\n  const b = users.filter(i => {\n    return new Date(i.birthday).getMonth() + 1 < monthNow || new Date(i.birthday).getMonth() + 1 === monthNow && new Date(i.birthday).getDate() < dayNow;\n  }).sort((a, b) => {\n    if (new Date(a.birthday).getMonth() === new Date(b.birthday).getMonth()) {\n      return new Date(a.birthday).getDate() > new Date(b.birthday).getDate() ? 1 : -1;\n    } else {\n      return new Date(a.birthday).getMonth() > new Date(b.birthday).getMonth() ? 1 : -1;\n    }\n  });\n  return [...a, ...b];\n}","map":{"version":3,"names":["axios","fetchUsers","options","method","url","headers","request","then","response","data","catch","error","fetch","json","console","log","err","getDayBirthday","date","birthday","Date","day","getDate","month","toLocaleString","slice","sortedUserDepartment","users","value","filter","user","department","sotredUserName","sort","a","b","firstName","monthNow","getMonth","dayNow","sotredUserDay","i"],"sources":["C:/Users/LENOVO/Desktop/test/src/api/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { User } from '../types/usersTypes';\r\n\r\nexport function fetchUsers() {\r\n  const options = {\r\n    method: 'GET',\r\n    url: \"https://stoplight.io/mocks/kode-frontend-team/koder-stoplight/86566464/users?__example=all\",\r\n    headers: { 'Content-Type': 'application/json' }\r\n  };\r\n\r\n  return axios.request(options).then((response) => {\r\n    return response.data\r\n  }).catch((error) => {\r\n    return error(error);\r\n  });\r\n\r\n}\r\n\r\n\r\nconst options = {\r\n  method: \"GET\",\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n};\r\nfetch(\r\n  \"https://stoplight.io/mocks/kode-frontend-team/koder-stoplight/86566464/users?__example=frontend\",\r\n  options\r\n)\r\n  .then((response) => response.json())\r\n  .then((response) => console.log(response))\r\n  .catch((err) => console.error(err));\r\n\r\n\r\n\r\nexport function getDayBirthday(date: string) {\r\n  const birthday = new Date(date); \r\n  const day = birthday.getDate();\r\n  const month = new Date(date).toLocaleString('ru', { month: 'long' }).slice(0, 3);\r\n  return `${day} ${month}`;\r\n \r\n}\r\n\r\n\r\n\r\nexport function sortedUserDepartment(users:User[],value:string){\r\n  console.log(users)\r\n  console.log(value)\r\n return users.filter((user:any) => user.department === value)\r\n\r\n\r\n}\r\n\r\n\r\nexport function sotredUserName(users: User[]) {\r\n  return users.sort((a, b) => a.firstName > b.firstName ? 1 : -1);\r\n\r\n}\r\n\r\nconst date = new Date();\r\nconst monthNow = date.getMonth() + 1;\r\nconst dayNow = date.getDate();\r\n\r\nexport function sotredUserDay(users: User[]) {\r\n\r\n  const a = users.filter((i) => {\r\n    return new Date(i.birthday).getMonth() + 1 > monthNow ||\r\n      (new Date(i.birthday).getMonth() + 1 === monthNow && new Date(i.birthday).getDate() >= dayNow)\r\n  }).sort((a, b) => {\r\n    if (new Date(a.birthday).getMonth() === new Date(b.birthday).getMonth()) {\r\n      return new Date(a.birthday).getDate() > new Date(b.birthday).getDate() ? 1 : -1\r\n    } else {\r\n      return new Date(a.birthday).getMonth() > new Date(b.birthday).getMonth() ? 1 : -1\r\n    }\r\n  })\r\n\r\n  const b = users.filter((i) => {\r\n    return new Date(i.birthday).getMonth() + 1 < monthNow ||\r\n      (new Date(i.birthday).getMonth() + 1 === monthNow && new Date(i.birthday).getDate() < dayNow)\r\n  }).sort((a, b) => {\r\n    if (new Date(a.birthday).getMonth() === new Date(b.birthday).getMonth()) {\r\n      return new Date(a.birthday).getDate() > new Date(b.birthday).getDate() ? 1 : -1\r\n    } else {\r\n      return new Date(a.birthday).getMonth() > new Date(b.birthday).getMonth() ? 1 : -1\r\n    }\r\n  })\r\n\r\n  return [...a, ...b]\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}