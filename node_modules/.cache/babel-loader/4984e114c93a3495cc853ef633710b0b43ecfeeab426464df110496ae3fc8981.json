{"ast":null,"code":"import axios from 'axios';\nexport function fetchUsers() {\n  const options = {\n    method: 'GET',\n    url: \"https://stoplight.io/mocks/kode-frontend-team/koder-stoplight/86566464/users?__example=all\",\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  return axios.request(options).then(response => {\n    return response.data;\n  }).catch(error => {\n    return error(error);\n  });\n}\nexport function getDayBirthday(date) {\n  const birthday = new Date(date);\n  const day = birthday.getDate();\n  const month = new Date(date).toLocaleString('ru', {\n    month: 'long'\n  }).slice(0, 3);\n  return `${day} ${month}`;\n}\nfunction sortedUserDepartment(users) {\n  const a = users.filter((user, value) => {\n    if (user.department === value) {\n      console.log(user.department);\n    }\n  });\n}\nexport function sotredUserName(users) {\n  return users.sort((a, b) => a.firstName > b.firstName ? 1 : -1);\n}\nconst date = new Date();\nconst monthNow = date.getMonth() + 1;\nconst dayNow = date.getDate();\nexport function sotredUserDay(users) {\n  const a = users.filter(i => {\n    return new Date(i.birthday).getMonth() + 1 > monthNow || new Date(i.birthday).getMonth() + 1 === monthNow && new Date(i.birthday).getDate() >= dayNow;\n  }).sort((a, b) => {\n    if (new Date(a.birthday).getMonth() === new Date(b.birthday).getMonth()) {\n      return new Date(a.birthday).getDate() > new Date(b.birthday).getDate() ? 1 : -1;\n    } else {\n      return new Date(a.birthday).getMonth() > new Date(b.birthday).getMonth() ? 1 : -1;\n    }\n  });\n  const b = users.filter(i => {\n    return new Date(i.birthday).getMonth() + 1 < monthNow || new Date(i.birthday).getMonth() + 1 === monthNow && new Date(i.birthday).getDate() < dayNow;\n  }).sort((a, b) => {\n    if (new Date(a.birthday).getMonth() === new Date(b.birthday).getMonth()) {\n      return new Date(a.birthday).getDate() > new Date(b.birthday).getDate() ? 1 : -1;\n    } else {\n      return new Date(a.birthday).getMonth() > new Date(b.birthday).getMonth() ? 1 : -1;\n    }\n  });\n  return [...a, ...b];\n}","map":{"version":3,"names":["axios","fetchUsers","options","method","url","headers","request","then","response","data","catch","error","getDayBirthday","date","birthday","Date","day","getDate","month","toLocaleString","slice","sortedUserDepartment","users","a","filter","user","value","department","console","log","sotredUserName","sort","b","firstName","monthNow","getMonth","dayNow","sotredUserDay","i"],"sources":["C:/Users/LENOVO/Desktop/test/src/api/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { User } from '../types/usersTypes';\r\n\r\nexport function fetchUsers() {\r\n  const options = {\r\n    method: 'GET',\r\n    url: \"https://stoplight.io/mocks/kode-frontend-team/koder-stoplight/86566464/users?__example=all\",\r\n    headers: { 'Content-Type': 'application/json' }\r\n  };\r\n\r\n  return axios.request(options).then((response) => {\r\n    return response.data\r\n  }).catch((error) => {\r\n    return error(error);\r\n  });\r\n\r\n}\r\n\r\n\r\nexport function getDayBirthday(date: string) {\r\n  const birthday = new Date(date); \r\n  const day = birthday.getDate();\r\n  const month = new Date(date).toLocaleString('ru', { month: 'long' }).slice(0, 3);\r\n  return `${day} ${month}`;\r\n \r\n}\r\n\r\n\r\n\r\nfunction sortedUserDepartment(users:User[]){\r\n\r\n const a = users.filter((user: any, value) => {\r\n    if (user.department === value) {\r\n     console.log(user.department)\r\n   }\r\n \r\n})\r\n\r\n\r\n}\r\n\r\n\r\nexport function sotredUserName(users: User[]) {\r\n  return users.sort((a, b) => a.firstName > b.firstName ? 1 : -1);\r\n\r\n}\r\n\r\nconst date = new Date();\r\nconst monthNow = date.getMonth() + 1;\r\nconst dayNow = date.getDate();\r\n\r\nexport function sotredUserDay(users: User[]) {\r\n\r\n  const a = users.filter((i) => {\r\n    return new Date(i.birthday).getMonth() + 1 > monthNow ||\r\n      (new Date(i.birthday).getMonth() + 1 === monthNow && new Date(i.birthday).getDate() >= dayNow)\r\n  }).sort((a, b) => {\r\n    if (new Date(a.birthday).getMonth() === new Date(b.birthday).getMonth()) {\r\n      return new Date(a.birthday).getDate() > new Date(b.birthday).getDate() ? 1 : -1\r\n    } else {\r\n      return new Date(a.birthday).getMonth() > new Date(b.birthday).getMonth() ? 1 : -1\r\n    }\r\n  })\r\n\r\n  const b = users.filter((i) => {\r\n    return new Date(i.birthday).getMonth() + 1 < monthNow ||\r\n      (new Date(i.birthday).getMonth() + 1 === monthNow && new Date(i.birthday).getDate() < dayNow)\r\n  }).sort((a, b) => {\r\n    if (new Date(a.birthday).getMonth() === new Date(b.birthday).getMonth()) {\r\n      return new Date(a.birthday).getDate() > new Date(b.birthday).getDate() ? 1 : -1\r\n    } else {\r\n      return new Date(a.birthday).getMonth() > new Date(b.birthday).getMonth() ? 1 : -1\r\n    }\r\n  })\r\n\r\n  return [...a, ...b]\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}