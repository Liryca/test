{"ast":null,"code":"import { fetchAllUsers, fetchDepartmentUsers } from \"../../api/api\";\nexport const getAllUserAction = (users, loading, error) => ({\n  type: 'GET_ALL_USERS',\n  users,\n  loading,\n  error\n});\nexport const getDepartmentUsersAction = (users, loading, error) => ({\n  type: 'GET_DEPARTMENT_USERS',\n  users\n});\nexport function getAllUserThunk() {\n  return async function (dispatch, getState) {\n    const response = await fetchAllUsers();\n  };\n}\nexport function getUserDepartmentThunk() {\n  return async function (dispatch, getState) {\n    const {\n      users,\n      modal,\n      sort\n    } = getState();\n    const response = await fetchDepartmentUsers(sort.department);\n  };\n}\n\n// export const getSortedNameUsers = (users:User[]) => ({\n//     type: 'SORT_NAME_USERS',\n//     users\n\n// })\n\n// export const getSortedDepartmentUsers = (users: User[]) => ({\n//     type: 'SORT_DEPARTMENT_USERS',\n//     users\n// })\n\n// export const getSortedAutocomplitUsers = (users: User[]) => ({\n//     type: 'SORT_DEPARTMENT_USERS',\n//     users\n// })\n\n// export function userNameThunk() {\n\n//     return async function (dispatch: Dispatch, getState: () => RootState) {\n//         console.log(getState())\n//         const { users, modal, sort } = getState()\n//         if (sort.department === 'all') {\n//             const response = await fetchAllUsers()\n//             dispatch(getSortedNameUsers(sotredUserName(response.items)))\n//         } else {\n//             const responsDepartment = await fetchUsersDepartment(getState().sort.department)\n//             dispatch(getSortedDepartmentUsers(sotredUserName(responsDepartment.items)))\n//      }  \n//     };\n// }\n\n// export function userDateThunk() {\n//     return async function (dispatch: Dispatch, getState: () => RootState) {\n//         console.log(getState())\n\n//         if (getState().sort.department === 'all') {\n//             const responseAll = await fetchUsers()\n//             dispatch(getSortedNameUsers(sotredUserDay(responseAll.items)))\n//         } else {\n//             const responsDepartment = await fetchUsersDepartment(getState().sort.department)\n//             dispatch(getSortedDepartmentUsers(sotredUserDay(responsDepartment.items)))\n\n//         }\n\n//     };\n// }\n\n// export function sendUserDepartmentThunk(value: string) {\n//     return async function (dispatch: Dispatch) {\n//         const response = await fetchUsersAbout(value)\n//         console.log(response)\n//         dispatch(getSortedDepartmentUsers((response.items)))\n\n//     };\n// }\n\n// export function sendUserAutocompliteThunk() {\n//     return async function (dispatch: Dispatch) {\n//         const response = await fetchUsers()\n//         console.log(response)\n//         dispatch(getSortedDepartmentUsers((response.items)))\n\n//     };\n// }","map":{"version":3,"names":["fetchAllUsers","fetchDepartmentUsers","getAllUserAction","users","loading","error","type","getDepartmentUsersAction","getAllUserThunk","dispatch","getState","response","getUserDepartmentThunk","modal","sort","department"],"sources":["C:/Users/LENOVO/Desktop/test/src/store/actions/usersAction.ts"],"sourcesContent":["import { User } from \"../../types/usersTypes\";\r\nimport { Dispatch, } from 'redux';\r\nimport { fetchAllUsers, fetchDepartmentUsers, sotredUserDay, sotredUserName } from \"../../api/api\";\r\nimport { RootState } from \"..\";\r\n\r\n\r\nexport const getAllUserAction=(users:User[],loading,error)=>({\r\n    type: 'GET_ALL_USERS',\r\n    users,\r\n    loading,\r\n    error\r\n\r\n })\r\n \r\n export const getDepartmentUsersAction =(users:User[],loading,error)=>({\r\n     type: 'GET_DEPARTMENT_USERS',\r\n     users\r\n })\r\n \r\n \r\n \r\n export function getAllUserThunk() {\r\n     return async function (dispatch: Dispatch, getState: () => RootState) {\r\n         const response = await fetchAllUsers()\r\n     }\r\n }\r\n \r\n export function getUserDepartmentThunk() {\r\n     return async function (dispatch: Dispatch, getState: () => RootState) {\r\n         const { users, modal, sort } = getState()\r\n         const response = await fetchDepartmentUsers(sort.department)\r\n     }\r\n }\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const getSortedNameUsers = (users:User[]) => ({\r\n//     type: 'SORT_NAME_USERS',\r\n//     users\r\n  \r\n// })\r\n\r\n// export const getSortedDepartmentUsers = (users: User[]) => ({\r\n//     type: 'SORT_DEPARTMENT_USERS',\r\n//     users\r\n// })\r\n\r\n// export const getSortedAutocomplitUsers = (users: User[]) => ({\r\n//     type: 'SORT_DEPARTMENT_USERS',\r\n//     users\r\n// })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export function userNameThunk() {\r\n\r\n//     return async function (dispatch: Dispatch, getState: () => RootState) {\r\n//         console.log(getState())\r\n//         const { users, modal, sort } = getState()\r\n//         if (sort.department === 'all') {\r\n//             const response = await fetchAllUsers()\r\n//             dispatch(getSortedNameUsers(sotredUserName(response.items)))\r\n//         } else {\r\n//             const responsDepartment = await fetchUsersDepartment(getState().sort.department)\r\n//             dispatch(getSortedDepartmentUsers(sotredUserName(responsDepartment.items)))\r\n//      }  \r\n//     };\r\n// }\r\n\r\n// export function userDateThunk() {\r\n//     return async function (dispatch: Dispatch, getState: () => RootState) {\r\n//         console.log(getState())\r\n      \r\n//         if (getState().sort.department === 'all') {\r\n//             const responseAll = await fetchUsers()\r\n//             dispatch(getSortedNameUsers(sotredUserDay(responseAll.items)))\r\n//         } else {\r\n//             const responsDepartment = await fetchUsersDepartment(getState().sort.department)\r\n//             dispatch(getSortedDepartmentUsers(sotredUserDay(responsDepartment.items)))\r\n            \r\n//         }\r\n        \r\n       \r\n              \r\n//     };\r\n// }\r\n\r\n\r\n// export function sendUserDepartmentThunk(value: string) {\r\n//     return async function (dispatch: Dispatch) {\r\n//         const response = await fetchUsersAbout(value)\r\n//         console.log(response)\r\n//         dispatch(getSortedDepartmentUsers((response.items)))\r\n              \r\n//     };\r\n// }\r\n\r\n// export function sendUserAutocompliteThunk() {\r\n//     return async function (dispatch: Dispatch) {\r\n//         const response = await fetchUsers()\r\n//         console.log(response)\r\n//         dispatch(getSortedDepartmentUsers((response.items)))\r\n              \r\n//     };\r\n// }\r\n"],"mappings":"AAEA,SAASA,aAAa,EAAEC,oBAAoB,QAAuC,eAAe;AAIlG,OAAO,MAAMC,gBAAgB,GAAC,CAACC,KAAY,EAACC,OAAO,EAACC,KAAK,MAAI;EACzDC,IAAI,EAAE,eAAe;EACrBH,KAAK;EACLC,OAAO;EACPC;AAEH,CAAC,CAAC;AAEF,OAAO,MAAME,wBAAwB,GAAE,CAACJ,KAAY,EAACC,OAAO,EAACC,KAAK,MAAI;EAClEC,IAAI,EAAE,sBAAsB;EAC5BH;AACJ,CAAC,CAAC;AAIF,OAAO,SAASK,eAAe,GAAG;EAC9B,OAAO,gBAAgBC,QAAkB,EAAEC,QAAyB,EAAE;IAClE,MAAMC,QAAQ,GAAG,MAAMX,aAAa,EAAE;EAC1C,CAAC;AACL;AAEA,OAAO,SAASY,sBAAsB,GAAG;EACrC,OAAO,gBAAgBH,QAAkB,EAAEC,QAAyB,EAAE;IAClE,MAAM;MAAEP,KAAK;MAAEU,KAAK;MAAEC;IAAK,CAAC,GAAGJ,QAAQ,EAAE;IACzC,MAAMC,QAAQ,GAAG,MAAMV,oBAAoB,CAACa,IAAI,CAACC,UAAU,CAAC;EAChE,CAAC;AACL;;AAQD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAeA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}