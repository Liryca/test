{"ast":null,"code":"import { fetchAllUsers, fetchDepartmentUsers } from \"../../api/api\";\n// export const getAllUserAction=(users:User[],loading:boolean,error:null|string)=>({\n//     type: 'GET_ALL_USERS',\n//     users,\n//     loading,\n//     error\n\n//  })\n\n//  export const getDepartmentUsersAction =(users:User[],loading:boolean,error:null|string)=>({\n//      type: 'GET_DEPARTMENT_USERS',\n//      users,\n//      loading,\n//      error\n//  })\n\n//  export function getAllUserThunk() {\n//      return async function (dispatch: Dispatch, getState: () => RootState) {\n//          const response = await fetchAllUsers()\n//          dispatch(getAllUserAction(response.items,true,null))\n//      }\n//  }\n\n//  export function getUserDepartmentThunk() {\n//      return async function (dispatch: Dispatch, getState: () => RootState) {\n//          const { users, modal, sort } = getState()\n//          const response = await fetchDepartmentUsers(sort.department)\n//          dispatch(getDepartmentUsersAction(response.items,true,null))\n//      }\n//  }\n\nexport const getUsersAction = () => ({\n  type: 'GET_USERS'\n});\nexport const getUsersSuccessAction = user => ({\n  type: 'GET_USERS_SUCCESS',\n  user: u\n});\nexport const getUsersErrorAction = error => ({\n  type: 'GET_USERS_ERROR',\n  error\n});\nexport function getUser() {\n  return async function (dispatch, getState) {\n    const {\n      users,\n      modal,\n      sort\n    } = getState();\n    if (sort.department === 'all') {\n      const response = await fetchAllUsers();\n      dispatch(getUsersSuccessAction(response.items));\n    } else {\n      const response = await fetchDepartmentUsers(sort.department);\n      dispatch(getUsersSuccessAction(response.items));\n    }\n  };\n}\n\n// export const getSortedNameUsers = (users:User[]) => ({\n//     type: 'SORT_NAME_USERS',\n//     users\n\n// })\n\n// export const getSortedDepartmentUsers = (users: User[]) => ({\n//     type: 'SORT_DEPARTMENT_USERS',\n//     users\n// })\n\n// export const getSortedAutocomplitUsers = (users: User[]) => ({\n//     type: 'SORT_DEPARTMENT_USERS',\n//     users\n// })\n\n// export function userNameThunk() {\n\n//     return async function (dispatch: Dispatch, getState: () => RootState) {\n//         console.log(getState())\n//         const { users, modal, sort } = getState()\n//         if (sort.department === 'all') {\n//             const response = await fetchAllUsers()\n//             dispatch(getSortedNameUsers(sotredUserName(response.items)))\n//         } else {\n//             const responsDepartment = await fetchUsersDepartment(getState().sort.department)\n//             dispatch(getSortedDepartmentUsers(sotredUserName(responsDepartment.items)))\n//      }  \n//     };\n// }\n\n// export function userDateThunk() {\n//     return async function (dispatch: Dispatch, getState: () => RootState) {\n//         console.log(getState())\n\n//         if (getState().sort.department === 'all') {\n//             const responseAll = await fetchUsers()\n//             dispatch(getSortedNameUsers(sotredUserDay(responseAll.items)))\n//         } else {\n//             const responsDepartment = await fetchUsersDepartment(getState().sort.department)\n//             dispatch(getSortedDepartmentUsers(sotredUserDay(responsDepartment.items)))\n\n//         }\n\n//     };\n// }\n\n// export function sendUserDepartmentThunk(value: string) {\n//     return async function (dispatch: Dispatch) {\n//         const response = await fetchUsersAbout(value)\n//         console.log(response)\n//         dispatch(getSortedDepartmentUsers((response.items)))\n\n//     };\n// }\n\n// export function sendUserAutocompliteThunk() {\n//     return async function (dispatch: Dispatch) {\n//         const response = await fetchUsers()\n//         console.log(response)\n//         dispatch(getSortedDepartmentUsers((response.items)))\n\n//     };\n// }","map":{"version":3,"names":["fetchAllUsers","fetchDepartmentUsers","getUsersAction","type","getUsersSuccessAction","user","u","getUsersErrorAction","error","getUser","dispatch","getState","users","modal","sort","department","response","items"],"sources":["C:/Users/LENOVO/Desktop/test/src/store/actions/usersAction.ts"],"sourcesContent":["import { User } from \"../../types/usersTypes\";\r\nimport { Dispatch, } from 'redux';\r\nimport { fetchAllUsers, fetchDepartmentUsers, sotredUserDay, sotredUserName } from \"../../api/api\";\r\nimport { RootState } from \"..\";\r\n\r\n\r\n// export const getAllUserAction=(users:User[],loading:boolean,error:null|string)=>({\r\n//     type: 'GET_ALL_USERS',\r\n//     users,\r\n//     loading,\r\n//     error\r\n\r\n//  })\r\n \r\n//  export const getDepartmentUsersAction =(users:User[],loading:boolean,error:null|string)=>({\r\n//      type: 'GET_DEPARTMENT_USERS',\r\n//      users,\r\n//      loading,\r\n//      error\r\n//  })\r\n \r\n \r\n\r\n \r\n//  export function getAllUserThunk() {\r\n//      return async function (dispatch: Dispatch, getState: () => RootState) {\r\n//          const response = await fetchAllUsers()\r\n//          dispatch(getAllUserAction(response.items,true,null))\r\n//      }\r\n//  }\r\n \r\n//  export function getUserDepartmentThunk() {\r\n//      return async function (dispatch: Dispatch, getState: () => RootState) {\r\n//          const { users, modal, sort } = getState()\r\n//          const response = await fetchDepartmentUsers(sort.department)\r\n//          dispatch(getDepartmentUsersAction(response.items,true,null))\r\n//      }\r\n//  }\r\n \r\nexport const getUsersAction =()=>({\r\n    type: 'GET_USERS',\r\n})\r\n\r\nexport const getUsersSuccessAction = (user:User[]) => ({\r\n    type: 'GET_USERS_SUCCESS',\r\n    user:u\r\n})\r\n\r\nexport const getUsersErrorAction = (error:string) => ({\r\n    type: 'GET_USERS_ERROR',\r\n    error\r\n})\r\n\r\n\r\n\r\n\r\n\r\n export function getUser() {\r\n    return async function (dispatch: Dispatch, getState: () => RootState) {\r\n        const { users, modal, sort } = getState()\r\n        if (sort.department === 'all') {\r\n            const response = await fetchAllUsers();\r\n            dispatch(getUsersSuccessAction(response.items));\r\n        } else {\r\n            const response = await fetchDepartmentUsers(sort.department);\r\n            dispatch(getUsersSuccessAction(response.items));\r\n        }\r\n     \r\n    }\r\n}\r\n\r\n\r\n// export const getSortedNameUsers = (users:User[]) => ({\r\n//     type: 'SORT_NAME_USERS',\r\n//     users\r\n  \r\n// })\r\n\r\n// export const getSortedDepartmentUsers = (users: User[]) => ({\r\n//     type: 'SORT_DEPARTMENT_USERS',\r\n//     users\r\n// })\r\n\r\n// export const getSortedAutocomplitUsers = (users: User[]) => ({\r\n//     type: 'SORT_DEPARTMENT_USERS',\r\n//     users\r\n// })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export function userNameThunk() {\r\n\r\n//     return async function (dispatch: Dispatch, getState: () => RootState) {\r\n//         console.log(getState())\r\n//         const { users, modal, sort } = getState()\r\n//         if (sort.department === 'all') {\r\n//             const response = await fetchAllUsers()\r\n//             dispatch(getSortedNameUsers(sotredUserName(response.items)))\r\n//         } else {\r\n//             const responsDepartment = await fetchUsersDepartment(getState().sort.department)\r\n//             dispatch(getSortedDepartmentUsers(sotredUserName(responsDepartment.items)))\r\n//      }  \r\n//     };\r\n// }\r\n\r\n// export function userDateThunk() {\r\n//     return async function (dispatch: Dispatch, getState: () => RootState) {\r\n//         console.log(getState())\r\n      \r\n//         if (getState().sort.department === 'all') {\r\n//             const responseAll = await fetchUsers()\r\n//             dispatch(getSortedNameUsers(sotredUserDay(responseAll.items)))\r\n//         } else {\r\n//             const responsDepartment = await fetchUsersDepartment(getState().sort.department)\r\n//             dispatch(getSortedDepartmentUsers(sotredUserDay(responsDepartment.items)))\r\n            \r\n//         }\r\n        \r\n       \r\n              \r\n//     };\r\n// }\r\n\r\n\r\n// export function sendUserDepartmentThunk(value: string) {\r\n//     return async function (dispatch: Dispatch) {\r\n//         const response = await fetchUsersAbout(value)\r\n//         console.log(response)\r\n//         dispatch(getSortedDepartmentUsers((response.items)))\r\n              \r\n//     };\r\n// }\r\n\r\n// export function sendUserAutocompliteThunk() {\r\n//     return async function (dispatch: Dispatch) {\r\n//         const response = await fetchUsers()\r\n//         console.log(response)\r\n//         dispatch(getSortedDepartmentUsers((response.items)))\r\n              \r\n//     };\r\n// }\r\n"],"mappings":"AAEA,SAASA,aAAa,EAAEC,oBAAoB,QAAuC,eAAe;AAIlG;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,cAAc,GAAE,OAAK;EAC9BC,IAAI,EAAE;AACV,CAAC,CAAC;AAEF,OAAO,MAAMC,qBAAqB,GAAIC,IAAW,KAAM;EACnDF,IAAI,EAAE,mBAAmB;EACzBE,IAAI,EAACC;AACT,CAAC,CAAC;AAEF,OAAO,MAAMC,mBAAmB,GAAIC,KAAY,KAAM;EAClDL,IAAI,EAAE,iBAAiB;EACvBK;AACJ,CAAC,CAAC;AAMD,OAAO,SAASC,OAAO,GAAG;EACvB,OAAO,gBAAgBC,QAAkB,EAAEC,QAAyB,EAAE;IAClE,MAAM;MAAEC,KAAK;MAAEC,KAAK;MAAEC;IAAK,CAAC,GAAGH,QAAQ,EAAE;IACzC,IAAIG,IAAI,CAACC,UAAU,KAAK,KAAK,EAAE;MAC3B,MAAMC,QAAQ,GAAG,MAAMhB,aAAa,EAAE;MACtCU,QAAQ,CAACN,qBAAqB,CAACY,QAAQ,CAACC,KAAK,CAAC,CAAC;IACnD,CAAC,MAAM;MACH,MAAMD,QAAQ,GAAG,MAAMf,oBAAoB,CAACa,IAAI,CAACC,UAAU,CAAC;MAC5DL,QAAQ,CAACN,qBAAqB,CAACY,QAAQ,CAACC,KAAK,CAAC,CAAC;IACnD;EAEJ,CAAC;AACL;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAeA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}