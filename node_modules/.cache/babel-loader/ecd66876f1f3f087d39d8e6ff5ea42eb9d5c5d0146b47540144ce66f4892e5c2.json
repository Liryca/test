{"ast":null,"code":"import axios from 'axios';\nexport async function fetchAllUsers() {\n  /// получение всех юзеров\n  const options = {\n    method: 'GET',\n    url: \"https://stoplight.io/mocks/kode-frontend-team/koder-stoplight/86566464/users?__example=all\",\n    // url:\"https://stoplight.io/mocks/kode-frontend-team/koder-stoplight/86566464/users?__code=500&__dynamic=true\",\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const response = await axios.request(options);\n  console.log(response.data);\n  return response.data;\n}\nexport async function fetchDepartmentUsers(d) {\n  // получение по департменту \n\n  const options = {\n    method: 'GET',\n    url: `https://stoplight.io/mocks/kode-frontend-team/koder-stoplight/86566464/users?__example=${d}`,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  try {\n    const response = await axios.request(options);\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n}\nexport function getDayBirthday(date) {\n  const birthday = new Date(date);\n  const day = birthday.getDate();\n  const month = new Date(date).toLocaleString('ru', {\n    month: 'long'\n  }).slice(0, 3);\n  return `${day} ${month}`;\n}\nexport function sotredUserName(users) {\n  return users.sort((a, b) => a.firstName > b.firstName ? 1 : -1);\n}\nconst date = new Date();\nconst monthNow = date.getMonth() + 1;\nconst dayNow = date.getDate();\nexport function sotredUserDay(users) {\n  const a = users.filter(i => {\n    return new Date(i.birthday).getMonth() + 1 > monthNow || new Date(i.birthday).getMonth() + 1 === monthNow && new Date(i.birthday).getDate() >= dayNow;\n  }).sort((a, b) => {\n    if (new Date(a.birthday).getMonth() === new Date(b.birthday).getMonth()) {\n      return new Date(a.birthday).getDate() > new Date(b.birthday).getDate() ? 1 : -1;\n    } else {\n      return new Date(a.birthday).getMonth() > new Date(b.birthday).getMonth() ? 1 : -1;\n    }\n  });\n  const b = users.filter(i => {\n    return new Date(i.birthday).getMonth() + 1 < monthNow || new Date(i.birthday).getMonth() + 1 === monthNow && new Date(i.birthday).getDate() < dayNow;\n  }).sort((a, b) => {\n    if (new Date(a.birthday).getMonth() === new Date(b.birthday).getMonth()) {\n      return new Date(a.birthday).getDate() > new Date(b.birthday).getDate() ? 1 : -1;\n    } else {\n      return new Date(a.birthday).getMonth() > new Date(b.birthday).getMonth() ? 1 : -1;\n    }\n  });\n  return [...a, ...b];\n}\n\n// export function sortedUserDepartment(users: User[], value: string) {\n//   console.log(users)\n//   console.log(value)\n//   return users.filter((user: any) => user.department === value)\n\n// }","map":{"version":3,"names":["axios","fetchAllUsers","options","method","url","headers","response","request","console","log","data","fetchDepartmentUsers","d","error","getDayBirthday","date","birthday","Date","day","getDate","month","toLocaleString","slice","sotredUserName","users","sort","a","b","firstName","monthNow","getMonth","dayNow","sotredUserDay","filter","i"],"sources":["C:/Users/LENOVO/Desktop/test/src/api/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { User } from '../types/usersTypes';\r\n\r\nexport async function fetchAllUsers() {    /// получение всех юзеров\r\n  const options = {\r\n    method: 'GET',\r\n    url: \"https://stoplight.io/mocks/kode-frontend-team/koder-stoplight/86566464/users?__example=all\",\r\n    // url:\"https://stoplight.io/mocks/kode-frontend-team/koder-stoplight/86566464/users?__code=500&__dynamic=true\",\r\n    headers: { 'Content-Type': 'application/json' }\r\n  };\r\n\r\n  const response = await axios.request(options)\r\n  console.log(response.data)\r\n  return response.data\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport async function fetchDepartmentUsers(d: string) {  // получение по департменту \r\n\r\n  const options = {\r\n    method: 'GET',\r\n    url: `https://stoplight.io/mocks/kode-frontend-team/koder-stoplight/86566464/users?__example=${d}`,\r\n    headers: { 'Content-Type': 'application/json' }\r\n  };\r\n\r\n  try {\r\n    const response = await axios.request(options);\r\n    return response.data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nexport function getDayBirthday(date: string) {\r\n  const birthday = new Date(date);\r\n  const day = birthday.getDate();\r\n  const month = new Date(date).toLocaleString('ru', { month: 'long' }).slice(0, 3);\r\n  return `${day} ${month}`;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function sotredUserName(users: User[]) {\r\n  return users.sort((a, b) => a.firstName > b.firstName ? 1 : -1);\r\n\r\n}\r\n\r\nconst date = new Date();\r\nconst monthNow = date.getMonth() + 1;\r\nconst dayNow = date.getDate();\r\n\r\nexport function sotredUserDay(users: User[]) {\r\n\r\n  const a = users.filter((i) => {\r\n    return new Date(i.birthday).getMonth() + 1 > monthNow ||\r\n      (new Date(i.birthday).getMonth() + 1 === monthNow && new Date(i.birthday).getDate() >= dayNow)\r\n  }).sort((a, b) => {\r\n    if (new Date(a.birthday).getMonth() === new Date(b.birthday).getMonth()) {\r\n      return new Date(a.birthday).getDate() > new Date(b.birthday).getDate() ? 1 : -1\r\n    } else {\r\n      return new Date(a.birthday).getMonth() > new Date(b.birthday).getMonth() ? 1 : -1\r\n    }\r\n  })\r\n\r\n  const b = users.filter((i) => {\r\n    return new Date(i.birthday).getMonth() + 1 < monthNow ||\r\n      (new Date(i.birthday).getMonth() + 1 === monthNow && new Date(i.birthday).getDate() < dayNow)\r\n  }).sort((a, b) => {\r\n    if (new Date(a.birthday).getMonth() === new Date(b.birthday).getMonth()) {\r\n      return new Date(a.birthday).getDate() > new Date(b.birthday).getDate() ? 1 : -1\r\n    } else {\r\n      return new Date(a.birthday).getMonth() > new Date(b.birthday).getMonth() ? 1 : -1\r\n    }\r\n  })\r\n\r\n  return [...a, ...b]\r\n}\r\n\r\n\r\n\r\n// export function sortedUserDepartment(users: User[], value: string) {\r\n//   console.log(users)\r\n//   console.log(value)\r\n//   return users.filter((user: any) => user.department === value)\r\n\r\n\r\n// }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}